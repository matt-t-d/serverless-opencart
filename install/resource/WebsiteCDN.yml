Type: AWS::CloudFront::Distribution
Properties:
  DistributionConfig:
    Aliases:
      - ${self:custom.DOMAIN}
    ViewerCertificate:
      AcmCertificateArn: ${self:custom.CERTIFICATE_ARN}
      SslSupportMethod: 'sni-only'
      MinimumProtocolVersion: TLSv1.1_2016
    Enabled: true
    PriceClass: PriceClass_100
    HttpVersion: http2
    Origins:
      - Id: Website
        DomainName: '#{ApiGatewayRestApi}.execute-api.#{AWS::Region}.amazonaws.com'
        # This is the stage, if you are using another one (e.g. prod), you will need to change it here too
        OriginPath: /${self:provider.stage}
        CustomOriginConfig:
          OriginProtocolPolicy: 'https-only' # API Gateway only supports HTTPS
      # The assets (S3)
      - Id: StaticAssets
        DomainName: '#{StaticAssets}.s3.amazonaws.com'
        OriginPath: '/assets'
        CustomOriginConfig:
          OriginProtocolPolicy: 'http-only'
      # the dynamic image assets
      - Id: UploadedImages
        DomainName: '#{UploadedImageBucket}.s3.amazonaws.com'
        CustomOriginConfig:
          OriginProtocolPolicy: 'http-only'
    # The default behavior is to send everything to AWS Lambda
    DefaultCacheBehavior:
      AllowedMethods: [GET, HEAD, OPTIONS, PUT, POST, PATCH, DELETE]
      TargetOriginId: Website # the PHP application
      # Disable caching for the PHP application https://aws.amazon.com/premiumsupport/knowledge-center/prevent-cloudfront-from-caching-files/
      DefaultTTL: 0
      MinTTL: 0
      MaxTTL: 0
      # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-forwardedvalues.html
      ForwardedValues:
        QueryString: true
        Cookies:
          Forward: all # Forward cookies to use them in PHP
        # We must *not* forward the `Host` header else it messes up API Gateway
        Headers:
          - 'Accept'
          - 'Accept-Language'
          - 'Origin'
          - 'Referer'
      ViewerProtocolPolicy: redirect-to-https
    CacheBehaviors:
      - PathPattern: 'admin/view/*'
        TargetOriginId: StaticAssets # the static files on S3
        AllowedMethods: [GET, HEAD]
        ForwardedValues:
          # No need for all that with assets
          QueryString: 'false'
          Cookies:
            Forward: none
        ViewerProtocolPolicy: redirect-to-https
        Compress: true

      - PathPattern: 'admin/language/*'
        TargetOriginId: StaticAssets # the static files on S3
        AllowedMethods: [GET, HEAD]
        ForwardedValues:
          # No need for all that with assets
          QueryString: 'false'
          Cookies:
            Forward: none
        ViewerProtocolPolicy: redirect-to-https
        Compress: true

      - PathPattern: 'catalog/view/*'
        TargetOriginId: StaticAssets # the static files on S3
        AllowedMethods: [GET, HEAD]
        ForwardedValues:
          # No need for all that with assets
          QueryString: 'false'
          Cookies:
            Forward: none
        ViewerProtocolPolicy: redirect-to-https
        Compress: true

      - PathPattern: 'catalog/language/*'
        TargetOriginId: StaticAssets # the static files on S3
        AllowedMethods: [GET, HEAD]
        ForwardedValues:
          # No need for all that with assets
          QueryString: 'false'
          Cookies:
            Forward: none
        ViewerProtocolPolicy: redirect-to-https
        Compress: true

      - PathPattern: 'image/*'
        TargetOriginId: UploadedImages
        AllowedMethods: [GET, HEAD]
        ForwardedValues:
          QueryString: 'false'
          Cookies:
            Forward: none
        ViewerProtocolPolicy: redirect-to-https
        Compress: true
    CustomErrorResponses:
      # Do not cache HTTP errors
      - ErrorCode: 500
        ErrorCachingMinTTL: 0
      - ErrorCode: 504
        ErrorCachingMinTTL: 0
